name: Deploy backend to EC2 via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Assign temporary public IPv4 to EC2 instance
      id: assign-ip
      run: |
        # Allocate Elastic IP
        ALLOCATION_ID=$(aws ec2 allocate-address --domain vpc --query 'AllocationId' --output text)
        echo "allocation-id=$ALLOCATION_ID" >> $GITHUB_OUTPUT

        # Associate with instance
        aws ec2 associate-address \
          --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
          --allocation-id $ALLOCATION_ID

        # Set public ip for future use
        PUBLIC_IP=$(aws ec2 describe-addresses \
          --allocation-ids $ALLOCATION_ID \
          --query 'Addresses[0].PublicIp' \
          --output text)
        echo "public-ip=$PUBLIC_IP" >> $GITHUB_OUTPUT


    - name: Wait for SSH connectivity
      run: |
        PUBLIC_IP="${{ steps.assign-ip.outputs.public-ip }}"
        echo "Waiting for SSH on $PUBLIC_IP..."
        max_attempts=24
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          if nc -z -w5 $PUBLIC_IP 22; then
            echo "✅ SSH is reachable"
            break
          fi
          echo "Attempt $attempt/$max_attempts: SSH not reachable yet..."
          attempt=$((attempt+1))
          sleep 10
        done
        if [ $attempt -gt $max_attempts ]; then
          echo "❌ SSH not reachable after 4 minutes"
          exit 1
        fi


    - name: Kill all running tmux sessions
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ steps.assign-ip.outputs.public-ip }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          tmux kill-server 2>/dev/null || true


    - name: Pull latest code on EC2
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ steps.assign-ip.outputs.public-ip }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          mkdir -p /home/ec2-user/watch-together
          cd /home/ec2-user/watch-together

          git config --global --add safe.directory /home/ec2-user/watch-together
          git checkout main
          git pull origin main


    - name: Install dependencies & build
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ steps.assign-ip.outputs.public-ip }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/watch-together/backend

          npm install
          npm run build


    - name: Start tmux session and run bot script
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ steps.assign-ip.outputs.public-ip }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/watch-together/backend

          tmux new-session -d -s watch-together-backend

          tmux send-keys -t watch-together-backend "BACKEND_PORT=${{ secrets.BACKEND_PORT }} YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }} npm run start" C-m


    - name: Remove temporary public IPv4
      if: always()
      run: |
        ASSOCIATION_ID=$(aws ec2 describe-addresses \
          --allocation-ids ${{ steps.assign-ip.outputs.allocation-id }} \
          --query 'Addresses[0].AssociationId' --output text)
        aws ec2 disassociate-address --association-id $ASSOCIATION_ID
        aws ec2 release-address --allocation-id ${{ steps.assign-ip.outputs.allocation-id }}

