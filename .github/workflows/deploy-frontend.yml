name: Deploy frontend for Watch Together app site


on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout React repo
        uses: actions/checkout@v4


      - name: Checkout Infra repo
        uses: actions/checkout@v4
        with:
          repository: jothamteshome/reusable-github-actions-workflows
          ref: deploy-static-site-latest
          path: frontend/infra


      - name: Format repository name correctly
        run: |
          FULL_REPO_NAME="${{ github.repository }}"
          FORMATTED_REPO_NAME=${FULL_REPO_NAME##*/}
          echo "FORMATTED_REPO_NAME=$FORMATTED_REPO_NAME" >> $GITHUB_ENV
          echo "FORMATTED_REPO_NAME=$FORMATTED_REPO_NAME"


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      
      - name: Build project
        working-directory: frontend
        if: hashFiles('package-lock.json') != ''
        env:
          VITE_APP_BACKEND_URL: ${{ secrets.VITE_APP_BACKEND_URL }}
        run: |
          npm ci
          npm run build


      - name: Install CDK CLI
        run: |
          npm install -g aws-cdk


      - name: Install CDK requirements
        working-directory: frontend/infra/deploy-static-site
        run: pip install -r requirements.txt


      - name: Deploy CDK stack
        working-directory: frontend/infra/deploy-static-site
        env:
          HOSTED_ZONE_NAME: ${{ secrets.HOSTED_ZONE_NAME }}
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        run: cdk deploy --app "python3 app.py" --context repo_name="$FORMATTED_REPO_NAME" --require-approval never
      

      - name: Get Bucket Name & CloudFront ID
        id: get_outputs
        run: |
          STACK_NAME="${FORMATTED_REPO_NAME}-static-site"
          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='BucketNameOutput'].OutputValue" \
            --output text)
          CLOUDFRONT_ID=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontIdOutput'].OutputValue" \
            --output text)
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          echo "CLOUDFRONT_ID=$CLOUDFRONT_ID" >> $GITHUB_ENV


      - name: Sync React build to S3
        working-directory: frontend
        run: |
          if [ -d "build/client" ]; then
            BUILD_DIR="build/client/"
          elif [ -d "build" ]; then
            BUILD_DIR="build/"
          elif [ -d "dist" ]; then
            BUILD_DIR="dist/"
          elif [ -d ".next" ]; then
            BUILD_DIR=".next/"
          else
            BUILD_DIR="./"
          fi

          ls -a

          echo "Using build directory: $BUILD_DIR"
          aws s3 sync $BUILD_DIR s3://$BUCKET_NAME --delete \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "infra/*" \
            --exclude ".gitignore"


      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"